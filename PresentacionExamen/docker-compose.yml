services:
  frontend:
    build:
      context: ./frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules  # evita que se sobrescriba la carpeta node_modules
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build:
      context: ./backend
    volumes:
      - ./backend:/app
      - /app/staticfiles  # para servir archivos est√°ticos sin sobrescribir
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=db
      - DJANGO_SETTINGS_MODULE=backend.settings
    depends_on:
      - db
    networks:
      - app-network
    restart: always

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./Database:/docker-entrypoint-initdb.d  # Monta la carpeta Database
    networks:
      - app-network

networks:
  app-network:

volumes:
  postgres_data:
